
<div class="container-fluid  pt-4 px-4" >
    <div class="row g-4">
        <div class="  col-xl-2">

        </div>
      
        <div class="col-sm-12   col-xl-6">
          
            <form action="/admin/addProd" method="post" enctype="multipart/form-data">
                <!-- Name input -->
                <div class="form-outline mb-4">
                  
                  <input type="text" name="title" id="form4Example1" class="form-control" />
                  <label class="form-label" for="form4Example1">Title</label>
                </div>
               
                <div class="form-outline mb-4">
                    <input type="text" name="brand" id="form4Example1" class="form-control" />
                  <label class="form-label" for="form4Example1">Brand</label>
                </div>

                <div class="form-outline mb-4">
                    <input type="number" name="price" id="form4Example1" class="form-control" />
                  <label class="form-label" for="form4Example1">Price</label>
                </div>

                <div class="form-outline mb-4">
                    <input type="number" name="stock" id="form4Example1" class="form-control" />
                  <label class="form-label" for="form4Example1">Stock</label>
                </div>

                <div class="form-outline mb-4">
                    <select style="border-radius: 10px;border-color: blue;background-color: aqua;" name="category" id="category">
                    <% categories.forEach(element => {%>
                        <option value="<%= element._id %> "><%= element.name %> </option>
                    <%})%>
                   </select>
                  <label class="form-label" for="form4Example1">Category</label>
                </div>

               
               
                <div class="form-outline mb-4">
                  <!-- <input type="file" name="imagee2" id="id_image" class="form-control" multiple /> -->
                  <input type="file" name="imagee2"   id="file"  class="form-control" multiple />
                 
                  <!-- <input type="hidden" name="imagee2" id="post_img_data"  accept="image/*" class="form-control" multiple> -->
                </div>
                






                <!-- <div id="image-box" class="image-container h-50 w-50"></div>
                <button
                 class="btn btn-outline-info"
                 id="crop-btn"
                 style="width: 100%; margin-top: 10px; display: none"
                 type="button">
                 Crop
                </button> -->
                <label class="form-label" for="form4Example1">Image</label>

                <div class="form-outline mb-4">
                    <input type="text" name="description" id="form4Example1" class="form-control" />
                  <label class="form-label" for="form4Example1">Description</label>
                  
                </div>
               

                <div class="form-outline mb-4">
                    <input type="text" name="discount" id="form4Example1" class="form-control" />
                  <label class="form-label" for="form4Example1">Discount</label>
                </div>

                <div class="form-outline mb-4">
                    <input type="text" name="size" id="form4Example1" class="form-control" />
                  <label class="form-label" for="form4Example1">Size</label>
                </div>
              
                <!-- Submit button -->
                <!-- <button type="submit" class="btn btn-primary btn-block mb-4" id="confirm-btn">Add Product</button> -->
                <button type="submit" class="btn btn-primary btn-block mb-4" >Add Product</button>
              </form>
            </div>
            </div>
        </div>

 <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js" defer></script>
        <script>
          // image-box is the id of the div element that will store our cropping image preview
          const imagebox = document.getElementById("image-box");
          // crop-btn is the id of button that will trigger the event of change original file with cropped file.
          const crop_btn = document.getElementById("crop-btn");
          // id_image is the id of the input tag where we will upload the image
          const input = document.getElementById("id_image");
          console.log("1")
          
          // When user uploads the image this event will get triggered
          input.addEventListener("change", () => {
              // Getting image file object from the input variable
              const img_data = input.files[0];
              console.log("2")
              // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
            // The new object URL represents the specified File object or Blob object.
            const url = URL.createObjectURL(img_data);
            console.log("3")
        
            // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
            imagebox.innerHTML = `<img src="${url}" id="image1" style="width:70%;">`;
        
            console.log("4")
        
            // Storing that cropping view image in a variable
            const image1 = document.getElementById("image1");
        
            // Displaying the image box
            document.getElementById("image-box").style.display = "block";
            // Displaying the Crop buttton
            document.getElementById("crop-btn").style.display = "block";
            // Hiding the Post button
            document.getElementById("confirm-btn").style.display = "none";
        
            // Creating a croper object with the cropping view image
            // The new Cropper() method will do all the magic and diplay the cropping view and adding cropping functionality on the website
            // For more settings, check out their official documentation at https://github.com/fengyuanchen/cropperjs
            const cropper = new Cropper(image1, {
              autoCropArea: 1,
              viewMode: 1,
              scalable: false,
              zoomable: false,
              movable: false,
              minCropBoxWidth: 200,
              minCropBoxHeight: 200,
            });
            console.log("5")
        
            // When crop button is clicked this event will get triggered
            crop_btn.addEventListener("click", () => {
              // This method coverts the selected cropped image on the cropper canvas into a blob object
              cropper.getCroppedCanvas().toBlob((blob) => {
                // Gets the original image data
                let fileInputElement = document.getElementById("id_image");
                // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
                let file = new File([blob], img_data.name, {
                  type: "image/",
                  lastModified: new Date().getTime(),
                });
                console.log("6")
                // Create a new container
                let container = new DataTransfer();
                // Add the cropped image file to the container
                container.items.add(file);
                // Replace the original image file with the new cropped image file
                fileInputElement.files = container.files;
                log
                console.log("7")
        
                // Hide the cropper box
                document.getElementById("image-box").style.display = "none";
                // Hide the crop button
                document.getElementById("crop-btn").style.display = "none";
                // Display the Post button
                document.getElementById("confirm-btn").style.display = "block";
              });
            });
          });
        </script> -->
